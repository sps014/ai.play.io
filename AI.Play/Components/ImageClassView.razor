<div class="col-md-5" style="padding-top: 20px;">
    <div class="card">
  <div class="card-header">
    <h5>Image Dataset</h5>
  </div>
  <div class="card-body" @onmouseover="StateHasChanged">
      <ul class="list-group">
          @foreach (var Class in Classes)
          {
            if(string.IsNullOrEmpty(Class.ClassName))
              Class.ClassName="Class" + ClassNameCount++;

              <ClassModifyView ClassContainer="Class" />
              <li class="list-group-item" style="height: 40px;">
                  <div>
                    <p @onwaiting="StateHasChanged"
                      data-toggle="modal" data-target="#exampleModal_@Class.ClassName">
                      @Class.ClassName
                    </p>
                    <i class="fas fa-images  red-text pr-3"
                      @onwaiting="StateHasChanged"
                      data-toggle="modal" data-target="#exampleModal_@Class.ClassName"
                      style="position:absolute;top:10px;right: 30px;"></i>
                    <i class="fas fa-trash" @onclick="()=>{DeleteClass(Class);}" 
                      style="position:absolute;top:10px;right: 15px;"></i>
                  </div>
              </li>
          }
      </ul>
    <center style="margin-top:20px;">
          <a href="#" class="btn btn-primary"
          @onclick="AddNewClass">Add New Class</a>


    </center>

  </div>
  <div class="card-footer text-muted">
    @if(Classes.Count<2)
    {
      <div class="alert alert-danger" role="alert">
        Need atleast 2 classes to categorize
      </div>
    }
  </div>
</div>
</div>

@code 
{
  [Parameter]
      public static List<ImageClassContainer> Classes { get; set; } = new List<ImageClassContainer>() {
  new ImageClassContainer(){ ClassName="Cats"},
  new ImageClassContainer(){ClassName="Dogs"}
  };
      static int ClassNameCount = 0;
      void AddNewClass()
      {
          Classes.Add(new ImageClassContainer() { ClassName = "Class" + ClassNameCount++ });
          StateHasChanged();
      }
      void DeleteClass(ImageClassContainer container)
      {
          Classes.Remove(container);
          StateHasChanged();
      }
}

